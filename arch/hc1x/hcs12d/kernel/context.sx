

/*

 Layout of standard saved context on stack 
 (this is the format that we write and read contexts):
 
  (low addr.)                                                                                               (high addr.)
      |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
      |   frame   |     z     |     xy    |    tmp    |  P  | CCR |  B  |  A  |     X     |     Y     |    Addr   |

      \------------------ softregs -------------------/
      
      P = PPAGE, the bank nr. of the return address


 Layout of function call context on stack, 
 before we convert it to standard:
 
  (low addr.)     (high addr.)
      |     |     |     |
      |  P  |    Addr   |


 Layout of interrupt context on stack, 
 before we convert it to standard:
 
  (low addr.)                                         (high addr.)
      |     |     |     |     |     |     |     |     |     |
      | CCR |  B  |  A  |     X     |     Y     |    Addr   |


*/

.macro SAVE_CONTEXT_FROM_FUNCTION
	staa		-4, sp			// save A -> ctx(A)
	ldaa		0, sp			// load callctx(P) -> A *
	sty			1, -sp			// save Y -> ctx(Y)
	stx			2, -sp			// save X -> ctx(X)
	stab		2, -sp			// save B -> ctx(B)  (skipping ctx(A))
	pshc						// save CCR -> ctx(CCR)
	psha						// save P -> ctx(P) *
	movw	_.tmp ,2,-sp		// save tmp -> ctx(tmp)
	movw	_.xy, 2,-sp			// save xy -> ctx(xy)
	movw	_.z, 2,-sp			// save z -> ctx(z)
	movw	_.frame, 2,-sp		// save frame -> ctx(frame)
.endm

.macro RESTORE_CONTEXT_FOR_FUNCTION
	movw	2,sp+, _.frame		// load frame <- ctx(frame)
	movw	2,sp+, _.z			// load z <- ctx(z)
	movw	2,sp+, _.xy			// load xy <- ctx(xy)
	movw	2,sp+, _.tmp		// load tmp <- ctx(tmp)
	ldy		6,sp				// load Y <- ctx(Y)
	movb	1,sp+, 6,sp			// move ctx(P) -> callctx(P)
	pulc						// load CCR <- ctx(CCR)
	puld						// load D <- ctx(D)
	pulx						// load X <- ctx(X)
	ins							// skipping ctx(Yh)

.endm


.macro SAVE_CONTEXT_FROM_INTERRUPT
	movb	PPAGE, 1,-sp		// save P -> ctx(P) 
	movw	_.tmp ,2,-sp		// save tmp -> ctx(tmp)
	movw	_.xy, 2,-sp			// save xy -> ctx(xy)
	movw	_.z, 2,-sp			// save z -> ctx(z)
	movw	_.frame, 2,-sp		// save frame -> ctx(frame)
.endm

.macro RESTORE_CONTEXT_FOR_INTERRUPT
	movw	2,sp+, _.frame		// load frame <- ctx(frame)
	movw	2,sp+, _.z			// load z <- ctx(z)
	movw	2,sp+, _.xy			// load xy <- ctx(xy)
	movw	2,sp+, _.tmp		// load tmp <- ctx(tmp)
	movb	1,sp+, PPAGE		// load P <- ctx(P)
.endm

 